#!/bin/bash

#Checks if one argument is provided
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <cleaned_file>" >&2
    exit 1
fi

input_file="$1"

# Check if input file exists and is readable
if [[ ! -f "$input_file" || ! -r "$input_file" ]]; then
    echo "Error: File '$input_file' does not exist or cannot be read." >&2
    exit 1
fi

# Find the most popular game mechanic by extracting mechanics from column 13
# count unique occurrences, and identify the most frequent mechanic
tail -n +2 "$input_file" | cut -f13 | grep -v "^$" | tr ',' '\n' | sed 's/^ *//;s/ *$//' | grep -v "^$" | sort | uniq -c | sort -nr | head -1 | \
awk '{ count = $1; $1 = ""; sub(/^ +/, ""); print "The most popular game mechanics is " $0 " found in " count " games" }'


#Find most popular game domain from column 14

tail -n +2 "$input_file" | cut -f14 | grep -v "^$" | tr ',' '\n' | sed 's/^ *//;s/ *$//' | grep -v "^$" | sort | uniq -c | sort -nr | head -1 | \
awk '{ count = $1; $1 = ""; sub(/^ +/, ""); print "The most game domain is " $0 " found in " count " games" }'

# Calculate Pearson correlation coefficient between publication year(column 3) and and average rating (column 9)

awk -F"\t" '
    NR > 1 && $3 ~ /^-?[0-9]+$/ && $9 ~ /^[0-9.]+$/ {
        year_value = $3 + 0
        rating_value = $9 + 0
        year_sum += year_value 
	rating_sum += rating_value
        year_rating_product += year_value * rating_value
        year_sum_squared += year_value * year_value
        rating_sum_squared += rating_value * rating_value
        count++
    }
    END {
        correlation_numerator = count * year_rating_product - year_sum * rating_sum
        correlation_denominator = sqrt((count * year_sum_squared - year_sum^2) * (count * rating_sum_squared - rating_sum^2))
        if (correlation_denominator == 0) {
            print "The correlation between the year of publication and the average rating is undefined"
        } else {
	    pearson_correlation = correlation_numerator / correlation_denominator
            printf "The correlation between the year of publication and the average rating is %.3f\n", pearson_correlation
        }
    }
' "$input_file"

#Calculate the Pearson correlation coefficient between game complexity (column 11) and average rating (column 9) to get high ratings
awk -F"\t" '
    NR > 1 && $11 ~ /^[0-9.]+$/ && $9 ~ /^[0-9.]+$/ {
        complexity_value = $11 + 0
        rating_value = $9 + 0
        complexity_sum += complexity_value
        rating_sum += rating_value
        complexity_rating_product += complexity_value * rating_value
        complexity_sum_squared += complexity_value * complexity_value
        rating_sum_squared += rating_value * rating_value
        count++
    }
    END {
        pearson_numerator = count * complexity_rating_product - complexity_sum * rating_sum
        pearson_denominator = sqrt((count * complexity_sum_squared - complexity_sum^2) * (count * rating_sum_squared - rating_sum^2))
        if (pearson_denominator == 0) {
            print "The correlation between the complexity of a game and its average rating is undefined"
        } else {
            correlation_coefficient = pearson_numerator / pearson_denominator
            printf "The correlation between the complexity of a game and its average rating is %.3f\n", correlation_coefficient
        }
    }
' "$input_file"
