#!/bin/bash

input="bgg_dataset.txt"
output="sample_cleaned_3.tsv"

# Step 1: Get the max valid numeric ID
max_id=$(awk -F";" 'NR > 1 && $1 ~ /^[0-9]+$/ && $1+0 > max { max = $1+0 } END { print max+1 }' "$input")

awk -v FS=";" -v OFS="\t" -v start_id="$max_id" '
BEGIN { new_id = start_id }

NR == 1 {
    # Print header line as-is
    print
    next
}

{
    # Ensure exactly 14 columns
    if (NF < 14) next

    # ======= ID =======
    if ($1 != "" && $1 !~ /^[0-9]+$/) next
    if ($1 == "") $1 = new_id++

    # ======= Min & Max Players =======
    if ($4 == "" || $5 == "") next
    if ($4 !~ /^[0-9]+$/ || $5 !~ /^[0-9]+$/) next
    min = $4 + 0
    max = $5 + 0
    if (min < 0 || max < 0 || min > max) next

    # ======= Play Time (required) =======
    if ($6 == "" || $6 !~ /^[0-9]+$/) next

    # ======= Min Age (required) =======
    if ($7 == "" || $7 !~ /^[0-9]+$/) next

    # ======= Users Rated (required) =======
    if ($8 == "" || $8 !~ /^-?[0-9]+$/) next
    if ($8 + 0 < 0) next

    # ======= Rating Average =======
    gsub(",", ".", $9)
    if ($9 != "" && $9 !~ /^[0-9.]+$/) next

    # ======= BGG Rank (optional) =======
    if ($10 != "" && ($10 !~ /^[0-9]+$/ || $10 + 0 < 0)) next

    # ======= Complexity Average =======
    gsub(",", ".", $11)
    if ($11 != "" && ($11 !~ /^[0-9.]+$/ || $11 + 0 < 0)) next

    # ======= Owned Users (optional) =======
    if ($12 != "" && ($12 !~ /^[0-9]+$/ || $12 + 0 < 0)) next

    # ======= Remove non-ASCII from all fields =======
    for (i = 1; i <= NF; i++) {
        gsub(/[^\t -~]/, "", $i)
    }

    # ======= Output cleaned row =======
    print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14
}
' "$input" | tr ';' '\t' | sed 's/\r$//' > "$output"

