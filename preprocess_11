#!/bin/bash

# Usage: ./preprocess bgg_dataset.txt
# This creates bgg_dataset.tsv in the same directory

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <input_file>" >&2
    exit 1
fi

input="$1"

# Extract base name without extension and append .tsv
base=$(basename "$input" .txt)
output="${base}.tsv"

# Step 1: Get max ID using tab-separated version
max_id=$(tr ';' '\t' < "$input" | awk -F"\t" 'NR > 1 && $1 ~ /^[0-9]+$/ && $1+0 > max { max = $1+0 } END { print max+1 }')

# Main preprocessing: apply tr BEFORE awk so header and data are tab-separated
tr ';' '\t' < "$input" | awk -v OFS="\t" -v start_id="$max_id" '
BEGIN { FS = "\t"; new_id = start_id }


NR == 1 {
    print
    next
}

{
    if ($1 != "" && $1 !~ /^[0-9]+$/) next
    if ($1 == "") $1 = new_id++

    if ($3 != "" && $3 !~ /^-?[0-9]+$/) next  # Accepts 0 and negative years
    if ($6 == "" || $6 !~ /^[0-9]+$/) next
    if ($7 == "" || $7 !~ /^[0-9]+$/) next
    if ($8 == "" || $8 !~ /^-?[0-9]+$/ || $8+0 < 0) next

    gsub(",", ".", $9)
    gsub(",", ".", $11)

    if ($10 != "" && ($10 !~ /^[0-9]+$/ || $10+0 < 0)) next
    if ($11 != "" && ($11 !~ /^[0-9.]+$/ || $11+0 < 0)) next
    if ($12 != "" && ($12 !~ /^[0-9]+$/ || $12+0 < 0)) next

    for (i = 1; i <= NF; i++) {
        gsub(/[^\t -~]/, "", $i)
    }

    print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14
}
' "$input" | sed 's/\r$//' > "$output"

echo "âœ… Cleaned output written to: $output"

